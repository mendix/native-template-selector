{"version":3,"sources":["hooks.js","Routes.js","TemplateDataProvider.js","components.js","MainPage.js","DiffView.js","ComparePage.js","App.js","reportWebVitals.js","index.js"],"names":["MENDIX_RAW_BASE_URL","MENDIX_VERSIONS_URL","MENDIX_RELEASES_URL","RequestState","Object","freeze","loading","complete","Routes","TemplateDataContext","createContext","versions","releases","TemplateDataProvider","Provider","useTemplateData","useContext","sort","a","b","compare","tag_name","Space","styled","div","props","width","height","HeaderText","h2","StatusText","color","LoadingView","ErrorStatusText","MainPage","inputRef","useRef","useState","mendixVersion","setMendixVersion","validationMessage","setValidationMessage","onQuery","useCallback","undefined","current","value","style","display","alignItems","justifyContent","flexDirection","textAlign","maxWidth","StyledInput","ref","onChange","placeholder","to","QueryView","mendixVersions","mendixReleases","templateRelease","setTemplateRelease","queryError","setQueryError","queryAction","semver","parse","loose","splitVersion","split","exampleVersion","map","i","join","error","mendixVersionRange","keys","find","templateVersion","satisfies","coerce","min","max","release","maxSatisfying","result","indexOf","useEffect","SuccessText","input","DiffView","diffText","files","parseDiff","filter","item","newPath","oldPath","some","path","RegExp","test","Boolean","data","oldRevision","newRevision","StyledDiff","Diff","DiffContainer","isVisible","setVisibility","CollapsibleTitle","onClick","type","DiffCodeWrapper","viewType","diffType","hunks","hunk","content","button","FileNameTitle","span","FileName","Tag","FileStatus","add","modify","delete","rename","ComparePage","fromOption","setFromOption","toOption","setToOption","options","label","flexGrow","StyleSelect","from","requestState","setRequestState","requestError","setRequestError","templateDiff","setTemplateDiff","fetch","then","res","ok","status","Error","statusText","text","diff","catch","message","toString","finally","state","useMendixTemplateDiff","Select","App","setVersions","setReleases","Promise","all","p","json","versionsError","releasesError","useMendixTemplateInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7881daa.chunk.js","sourcesContent":["import semver from \"semver\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nconst MENDIX_TEMPLATE_REPO = \"mendix/native-template\";\nconst MENDIX_RAW_BASE_URL = `https://raw.githubusercontent.com/${MENDIX_TEMPLATE_REPO}/master`;\nconst MENDIX_VERSIONS_URL = `${MENDIX_RAW_BASE_URL}/mendix_version.json`;\nconst MENDIX_RELEASES_URL = `${MENDIX_RAW_BASE_URL}/.mx/releases_list.json`;\nconst MENDIX_TEMPLATE_DIFF_URL = `https://raw.githubusercontent.com/mendix/native-template-diffs/diffs/diffs`;\n\nexport const RequestState = Object.freeze({\n  loading: 1,\n  complete: 2,\n});\n\nexport function useMendixTemplateInfo() {\n  const [requestState, setRequestState] = useState(RequestState.loading);\n  const [requestError, setRequestError] = useState();\n  const [versions, setVersions] = useState();\n  const [releases, setReleases] = useState();\n\n  useEffect(() => {\n    setRequestError(undefined);\n    setRequestState(RequestState.loading);\n    Promise.all(\n      [fetch(MENDIX_VERSIONS_URL), fetch(MENDIX_RELEASES_URL)].map((p) =>\n        p.then((res) => res.json())\n      )\n    )\n      .then(([versions, releases]) => {\n        setVersions(versions);\n        setReleases(releases);\n      })\n      .catch(([versionsError, releasesError]) =>\n        setRequestError(versionsError ?? releasesError)\n      )\n      .finally(() => setRequestState(RequestState.complete));\n  }, []);\n\n  return {\n    state: requestState,\n    error: requestError,\n    versions,\n    releases,\n  };\n}\n\nexport function useMendixTemplateDiff({ from, to }) {\n  const [requestState, setRequestState] = useState(RequestState.loading);\n  const [requestError, setRequestError] = useState();\n  const [templateDiff, setTemplateDiff] = useState();\n\n  useEffect(() => {\n    setRequestError(undefined);\n    setRequestState(RequestState.loading);\n    fetch(`${MENDIX_TEMPLATE_DIFF_URL}/${from}..${to}.diff`)\n      .then((res) => {\n        if (!res.ok) {\n          if (res.status === 404) {\n            throw new Error(`Missing diff files for ${from} and ${to}`);\n          }\n          throw new Error(res.statusText);\n        }\n        return res.text();\n      })\n      .then((diff) => setTemplateDiff(diff))\n      .catch((error) => setRequestError(error.message || error.toString()))\n      .finally(() => setRequestState(RequestState.complete));\n  }, [from, to]);\n\n  return {\n    state: requestState,\n    error: requestError,\n    templateDiff,\n  };\n}\n\nexport function useQueryTemplateRelease(mendixVersions, mendixReleases) {\n  return useCallback(\n    (mendixVersion) => {\n      const parsedVersion = semver.parse(mendixVersion, { loose: true });\n      if (!parsedVersion) {\n        const splitVersion = mendixVersion.split(\".\");\n        const exampleVersion = [\"x\", \"x\", \"x\"]\n          .map((value, i) => splitVersion[i] ?? value)\n          .join(\".\");\n        return {\n          error: `The supplied mendix version is not valid. It needs to be a valid Semantic Version. eg ${exampleVersion}`,\n        };\n      }\n\n      const mendixVersionRange = Object.keys(\n        mendixVersions\n      ).find((templateVersion) =>\n        semver.satisfies(semver.coerce(mendixVersion), templateVersion)\n      );\n      if (!mendixVersionRange) {\n        return {\n          error: `Could not determine a proper mendix version range for ${mendixVersion}`,\n        };\n      }\n\n      const { min, max } = mendixVersions[mendixVersionRange];\n      const versions = mendixReleases.map((release) => release.tag_name);\n      const templateVersion = semver.maxSatisfying(versions, `${min} - ${max}`);\n      if (!templateVersion) {\n        return {\n          error: `Could not determine a proper template version when ${mendixVersionRange} using ${mendixVersion}`,\n        };\n      }\n\n      return { result: mendixReleases[versions.indexOf(templateVersion)] };\n    },\n    [mendixVersions, mendixReleases]\n  );\n}\n","export const Routes = {\n    home: '/',\n    compare: '/compare'\n}","import { createContext, useContext } from \"react\";\nimport { compare } from \"semver\";\n\nconst TemplateDataContext = createContext({ versions: [], releases: {} });\n\nexport const TemplateDataProvider = TemplateDataContext.Provider;\n\nexport function useTemplateData() {\n  const { versions, releases } = useContext(TemplateDataContext);\n  releases.sort((a, b) => compare(b.tag_name, a.tag_name));\n\n  return {\n    versions,\n    releases,\n  };\n}\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nexport const Space = styled.div`\n  min-width: ${(props) => (props.width || 0) + \"px\"};\n  min-height: ${(props) => (props.height || 0) + \"px\"};\n`;\n\nexport const HeaderText = styled.h2`\n  font-size: xxx-large;\n  font-weight: lighter;\n`;\n\nexport const StatusText = styled.div`\n  font-size: 1em;\n  display: block;\n  color: ${(props) => props.color};\n`;\n\nexport const LoadingView = () => <p>Loading...</p>;\n\nexport const ErrorStatusText = (props) => <StatusText {...props} color=\"darkred\" />;\n","import React, { useEffect } from \"react\";\nimport { useQueryTemplateRelease } from \"./hooks\";\nimport { useCallback, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { Routes } from \"./Routes\";\nimport { useTemplateData } from \"./TemplateDataProvider\";\nimport { HeaderText, StatusText, Space, ErrorStatusText } from \"./components\";\n\nexport function MainPage() {\n  const inputRef = useRef();\n  const [mendixVersion, setMendixVersion] = useState();\n  const [validationMessage, setValidationMessage] = useState();\n\n  const onQuery = useCallback(() => {\n    setValidationMessage(undefined);\n\n    const mendixVersion = inputRef.current.value;\n    if (!mendixVersion) {\n      setValidationMessage(\"Needs a value\");\n      return;\n    }\n\n    setMendixVersion(mendixVersion);\n  }, []);\n\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div style={{ textAlign: \"center\", maxWidth: \"600px\" }}>\n        <HeaderText>Input Mendix Version</HeaderText>\n        <StyledInput ref={inputRef} onChange={onQuery} placeholder=\"eg 9.1.0\" />\n        {validationMessage && (\n          <StatusText color=\"darkorange\">{validationMessage}</StatusText>\n        )}\n        {mendixVersion && <QueryView mendixVersion={mendixVersion} />}\n        <Space height=\"24\" />\n        <Link to={Routes.compare}>Compare Template Versions</Link>\n      </div>\n    </div>\n  );\n}\n\nconst QueryView = ({ mendixVersion }) => {\n  const [templateRelease, setTemplateRelease] = useState();\n  const [queryError, setQueryError] = useState();\n  const { versions, releases } = useTemplateData();\n  const queryAction = useQueryTemplateRelease(versions, releases);\n\n  useEffect(() => {\n    setQueryError(undefined);\n    setTemplateRelease(undefined);\n\n    const { error, result } = queryAction(mendixVersion);\n    if (error) {\n      setQueryError(error);\n      return;\n    }\n\n    setTemplateRelease(result);\n  }, [queryAction, mendixVersion]);\n\n  return (\n    <>\n      {templateRelease && (\n        <>\n          <SuccessText>{templateRelease.tag_name}</SuccessText>\n          <Space height=\"4\" />\n          <span style={{ color: \"gray\" }}>recommended template version</span>\n        </>\n      )}\n      {queryError && <ErrorStatusText>{queryError}</ErrorStatusText>}\n    </>\n  );\n};\n\nconst SuccessText = styled.div`\n  font-size: 3em;\n  display: block;\n  color: forestgreen;\n`;\n\nconst StyledInput = styled.input`\n  font-size: 1.25em;\n  padding: 0.5em;\n  width: -webkit-fill-available;\n  text-align: center;\n  border: 1px solid lightgray;\n  border-radius: 4px;\n  flex-grow: 1;\n\n  ::placeholder {\n    color: lightgray;\n  }\n`;\n","import { Decoration, Diff, Hunk, parseDiff } from \"react-diff-view\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { Space } from \"./components\";\n\nexport function DiffView({ diffText }) {\n  const files = parseDiff(diffText).filter(\n    (item) =>\n      ![item.newPath, item.oldPath].some((path) =>\n        new RegExp(\"(-|.)lock|.github\").test(path ?? \"\")\n      ) && Boolean(item.newPath || item.oldPath)\n  );\n\n  return (\n    <>\n      {files.map((data) => (\n        <DiffContainer\n          key={[\n            data.newPath || data.oldPath,\n            data.oldRevision,\n            data.newRevision,\n          ].join(\"-\")}\n          data={data}\n        />\n      ))}\n    </>\n  );\n}\n\nconst StyledDiff = styled(Diff)`\n  .diff-gutter-col {\n    width: 2em;\n  }\n\n  td.diff-gutter {\n    color: rgba(27, 31, 35, 0.3);\n    padding: 0;\n    text-align: center;\n    font-size: 0.85em;\n    vertical-align: middle;\n    cursor: auto;\n  }\n\n  td.diff-gutter:hover {\n    cursor: pointer;\n    color: rgba(27, 31, 35, 0.6);\n  }\n\n  td.diff-code {\n    font-size: 0.95em;\n    color: #24292e;\n  }\n\n  td.diff-gutter-omit:before {\n    width: 0;\n  }\n`;\n\nconst DiffContainer = ({ data }) => {\n  const [isVisible, setVisibility] = useState(false);\n\n  return (\n    <>\n      <CollapsibleTitle onClick={() => setVisibility(!isVisible)} isVisible>\n        <span>{isVisible ? \"=\" : \"#\"}</span>\n        <Space width=\"16\" />\n        <FileName\n          oldPath={data.oldPath}\n          newPath={data.newPath}\n          type={data.type}\n        />\n        <Space width=\"16\" />\n        <FileStatus type={data.type} />\n      </CollapsibleTitle>\n      {isVisible && (\n        <DiffCodeWrapper>\n          <StyledDiff\n            key={data.oldRevision + \"-\" + data.newRevision}\n            viewType=\"split\"\n            diffType={data.type}\n            hunks={data.hunks}\n          >\n            {(hunks) =>\n              hunks.map((hunk) => {\n                return (\n                  <>\n                    <Decoration key={\"decoration-\" + hunk.content}>\n                      {hunk.content}\n                    </Decoration>\n                    <Hunk key={hunk.content} hunk={hunk} />\n                  </>\n                );\n              })\n            }\n          </StyledDiff>\n        </DiffCodeWrapper>\n      )}\n    </>\n  );\n};\n\nconst DiffCodeWrapper = styled.div`\n  background: white;\n  margin-bottom: 1em;\n  padding: 1em 0.25em;\n  border: 1px solid whitesmoke;\n  border-radius: 0 0 4px 4px;\n`;\n\nconst CollapsibleTitle = styled.button`\n  background: whitesmoke;\n  color: black;\n  display: flex;\n  cursor: pointer;\n  align-items: center;\n  font-size: 1em;\n  min-height: 48px;\n  width: 100%;\n  margin-top: 1em;\n  padding: 0.25em 1em;\n  text-align: left;\n  border: 2px solid transparent;\n  border-radius: ${(props) => (props.isVisible ? \"4px 4px 0 0\" : \"4px\")};\n\n  :hover {\n    background-color: lightgray;\n  }\n`;\n\nconst FileNameTitle = styled.span`\n  font-weight: bold;\n  display: flex;\n`;\n\nconst FileName = ({ oldPath, newPath, type }) => {\n  if (type === \"delete\") {\n    return <FileNameTitle>{oldPath}</FileNameTitle>;\n  }\n\n  if (oldPath !== newPath && type !== \"add\") {\n    return (\n      <FileNameTitle>\n        {oldPath} <span>></span> {newPath}\n        <Space width=\"8\" />\n        <Tag color=\"lightgrey\">RENAMED</Tag>\n      </FileNameTitle>\n    );\n  }\n\n  return <FileNameTitle>{newPath}</FileNameTitle>;\n};\n\nconst Tag = styled.span`\n  display: inline-block;\n  background-color: ${(props) => props.color};\n  color: white;\n  font-size: 0.8em;\n  padding: 0.2em 0.5em;\n  border-radius: 4px;\n`;\n\nconst FileStatus = ({ type }) => {\n  const colors = {\n    add: \"blue\",\n    modify: \"green\",\n    delete: \"red\",\n    rename: \"orange\",\n  };\n\n  const labels = {\n    add: \"ADDED\",\n    modify: \"MODIFIED\",\n    delete: \"DELETED\",\n    rename: \"RENAMED\",\n  };\n\n  return <Tag color={colors[type]}>{labels[type]}</Tag>;\n};\n","import React, { useState } from \"react\";\nimport { RequestState, useMendixTemplateDiff } from \"./hooks\";\nimport { DiffView } from \"./DiffView\";\nimport { Link } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { Routes } from \"./Routes\";\nimport styled from \"styled-components\";\nimport { useTemplateData } from \"./TemplateDataProvider\";\nimport { ErrorStatusText, HeaderText, LoadingView, Space } from \"./components\";\n\nexport function ComparePage() {\n  const { releases: mendixReleases } = useTemplateData();\n  const [fromOption, setFromOption] = useState(null);\n  const [toOption, setToOption] = useState(null);\n\n  let options = mendixReleases.map((release) => ({\n    value: release.tag_name,\n    label: release.tag_name,\n  }));\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <div\n        style={{\n          width: \"75%\",\n        }}\n      >\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <HeaderText style={{ flexGrow: 1 }}>\n            Compare Template Versions\n          </HeaderText>\n          <Link to={Routes.home}>Home</Link>\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <StyleSelect\n            value={fromOption}\n            onChange={setFromOption}\n            options={options.filter(({ value }) => value !== toOption)}\n          />\n          <Space width=\"8\" />\n          <StyleSelect\n            value={toOption}\n            onChange={setToOption}\n            options={options.filter(({ value }) => value !== fromOption)}\n          />\n        </div>\n        <Space height=\"24\" />\n        {fromOption && toOption && fromOption.value !== toOption.value && (\n          <QueryView from={fromOption.value} to={toOption.value} />\n        )}\n        <Space height=\"64\" />\n      </div>\n    </div>\n  );\n}\n\nfunction QueryView({ from, to }) {\n  const { state, error, templateDiff } = useMendixTemplateDiff({\n    from,\n    to,\n  });\n\n  return (\n    <>\n      {state === RequestState.loading && <LoadingView />}\n      {state === RequestState.complete && error && (\n        <ErrorStatusText>{error}</ErrorStatusText>\n      )}\n      {state === RequestState.complete && !error && (\n        <DiffView diffText={templateDiff} />\n      )}\n    </>\n  );\n}\n\nconst StyleSelect = styled(Select)`\n  flex-grow: 1;\n  font-size: 1.125em;\n\n  > div {\n    min-height: 48px;\n  }\n`;\n","import React from \"react\";\nimport { MainPage } from \"./MainPage\";\nimport { ComparePage } from \"./ComparePage\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { Routes } from \"./Routes\";\nimport { RequestState, useMendixTemplateInfo } from \"./hooks\";\nimport { TemplateDataProvider } from \"./TemplateDataProvider\";\nimport { ErrorStatusText, LoadingView } from \"./components\";\n\nexport default function App() {\n  const { state, error, versions, releases } = useMendixTemplateInfo();\n\n  return (\n    <>\n      {state === RequestState.loading && <LoadingView />}\n      {state === RequestState.complete && error && (\n        <ErrorStatusText>{error}</ErrorStatusText>\n      )}\n      {state === RequestState.complete && !error && (\n        <TemplateDataProvider\n          value={{\n            versions,\n            releases,\n          }}\n        >\n          <HashRouter>\n            <Switch>\n              <Route path={Routes.compare}>\n                <ComparePage />\n              </Route>\n              <Route path={Routes.home}>\n                <MainPage />\n              </Route>\n            </Switch>\n          </HashRouter>\n        </TemplateDataProvider>\n      )}\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"react-diff-view/style/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}