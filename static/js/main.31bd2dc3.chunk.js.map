{"version":3,"sources":["hooks.js","App.js","reportWebVitals.js","index.js"],"names":["MENDIX_TEMPLATE_REPO","MENDIX_RAW_BASE_URL","MENDIX_VERSIONS_URL","MENDIX_RELEASES_URL","RequestState","Object","freeze","loading","complete","QueryView","mendixVersions","mendixReleases","versions","releases","inputRef","useRef","useState","templateRelease","setTemplateRelease","queryError","setQueryError","validationMessage","setValidationMessage","onQueryTemplateRelease","useCallback","mendixVersion","semver","parse","loose","splitVersion","split","exampleVersion","map","value","i","join","error","mendixVersionRange","keys","find","templateVersion","satisfies","coerce","min","max","release","tag_name","maxSatisfying","result","indexOf","onQuery","undefined","current","className","ref","onChange","App","requestState","setRequestState","requestError","setRequestError","setMendixVersions","setMendixReleases","useEffect","Promise","all","fetch","p","then","res","json","catch","versionsError","releasesError","finally","state","useQueryMendixTemplate","templateDiff","setTemplateDiff","text","diff","console","warn","useQueryTemplateDiff","a","b","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31bd2dc3.chunk.js","sourcesContent":["import semver from \"semver\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nconst MENDIX_TEMPLATE_REPO = \"mendix/native-template\";\nconst MENDIX_RAW_BASE_URL = `https://raw.githubusercontent.com/${MENDIX_TEMPLATE_REPO}/master`;\nconst MENDIX_VERSIONS_URL = `${MENDIX_RAW_BASE_URL}/mendix_version.json`;\nconst MENDIX_RELEASES_URL = `${MENDIX_RAW_BASE_URL}/.mx/releases_list.json`;\n\nexport const RequestState = Object.freeze({\n  loading: 1,\n  complete: 2,\n});\n\nexport function useQueryMendixTemplate() {\n  const [requestState, setRequestState] = useState(RequestState.loading);\n  const [requestError, setRequestError] = useState();\n  const [mendixVersions, setMendixVersions] = useState();\n  const [mendixReleases, setMendixReleases] = useState();\n\n  useEffect(() => {\n    Promise.all(\n      [fetch(MENDIX_VERSIONS_URL), fetch(MENDIX_RELEASES_URL)].map((p) =>\n        p.then((res) => res.json())\n      )\n    )\n      .then(([versions, releases]) => {\n        setMendixVersions(versions);\n        setMendixReleases(releases);\n      })\n      .catch(([versionsError, releasesError]) =>\n        setRequestError(versionsError ?? releasesError)\n      )\n      .finally(() => setRequestState(RequestState.complete));\n  }, []);\n\n  return {\n    state: requestState,\n    error: requestError,\n    mendixVersions,\n    mendixReleases,\n  };\n}\n\nexport function useQueryTemplateDiff() {\n  const [requestState, setRequestState] = useState(RequestState.loading);\n  const [requestError, setRequestError] = useState();\n  const [templateDiff, setTemplateDiff] = useState();\n\n  useEffect(() => {\n    fetch(\n      `http://github.com/${MENDIX_TEMPLATE_REPO}/compare/v6.1.4...v6.0.2.diff`,\n      {\n        // method: \"POST\",\n        // mode: \"no-cors\",\n        // headers: {\n        //   \"Content-Type\": \"application/json\",\n        // },\n      }\n    )\n      .then((res) => res.text())\n      .then((diff) => {\n        console.warn(diff);\n        setTemplateDiff(diff);\n      })\n      .catch((error) => setRequestError(error))\n      .finally(() => setRequestState(RequestState.complete));\n  }, []);\n\n  return {\n    state: requestState,\n    error: requestError,\n    templateDiff,\n  };\n}\n\nexport function useQueryTemplateRelease(mendixVersions, mendixReleases) {\n  return useCallback(\n    (mendixVersion) => {\n      const parsedVersion = semver.parse(mendixVersion, { loose: true });\n      if (!parsedVersion) {\n        const splitVersion = mendixVersion.split(\".\");\n        const exampleVersion = [\"x\", \"x\", \"x\"]\n          .map((value, i) => splitVersion[i] ?? value)\n          .join(\".\");\n        return {\n          error: `The supplied mendix version is not valid. It needs to be a valid Semantic Version. eg ${exampleVersion}`,\n        };\n      }\n\n      const mendixVersionRange = Object.keys(\n        mendixVersions\n      ).find((templateVersion) =>\n        semver.satisfies(semver.coerce(mendixVersion), templateVersion)\n      );\n      if (!mendixVersionRange) {\n        return {\n          error: `Could not determine a proper mendix version range for ${mendixVersion}`,\n        };\n      }\n\n      const { min, max } = mendixVersions[mendixVersionRange];\n      const versions = mendixReleases.map((release) => release.tag_name);\n      const templateVersion = semver.maxSatisfying(versions, `${min} - ${max}`);\n      if (!templateVersion) {\n        return {\n          error: `Could not determine a proper template version when ${mendixVersionRange} using ${mendixVersion}`,\n        };\n      }\n\n      return { result: mendixReleases[versions.indexOf(templateVersion)] };\n    },\n    [mendixVersions, mendixReleases]\n  );\n}\n","import \"./App.css\";\nimport { useState, useRef, useCallback } from \"react\";\nimport {\n  RequestState,\n  useQueryMendixTemplate,\n  useQueryTemplateDiff,\n  useQueryTemplateRelease,\n} from \"./hooks\";\n\nfunction App() {\n  const {\n    state,\n    error,\n    mendixVersions,\n    mendixReleases,\n  } = useQueryMendixTemplate();\n\n  const { state: a, error: b, templateDiff } = useQueryTemplateDiff();\n  console.log({ a, b, templateDiff });\n\n  return (\n    <div className=\"App\">\n      {state === RequestState.loading && <p>Loading...</p>}\n      {state === RequestState.complete && error && (\n        <p className=\"error\">\n          An error occurred...\n          <br />\n          {error}\n        </p>\n      )}\n      {state === RequestState.complete && !error && (\n        <QueryView versions={mendixVersions} releases={mendixReleases} />\n      )}\n    </div>\n  );\n}\n\nconst QueryView = ({ versions, releases }) => {\n  const inputRef = useRef();\n  const [templateRelease, setTemplateRelease] = useState();\n  const [queryError, setQueryError] = useState();\n  const [validationMessage, setValidationMessage] = useState();\n  const onQueryTemplateRelease = useQueryTemplateRelease(versions, releases);\n\n  const onQuery = useCallback(() => {\n    setValidationMessage(undefined);\n    setQueryError(undefined);\n    setTemplateRelease(undefined);\n\n    const mendixVersion = inputRef.current.value;\n    if (!mendixVersion) {\n      setValidationMessage(\"Needs a value\");\n      return;\n    }\n\n    const { error, result } = onQueryTemplateRelease(mendixVersion);\n    if (error) {\n      setQueryError(error);\n      return;\n    }\n\n    setTemplateRelease(result);\n  }, [onQueryTemplateRelease]);\n\n  return (\n    <div className=\"query-body\">\n      <h2 className=\"header\">Input Mendix Version</h2>\n      <div className=\"selector\">\n        <input ref={inputRef} onChange={onQuery} />\n      </div>\n      <div className=\"result\">\n        {templateRelease && (\n          <p className=\"success\">\n            <span>Required version: {templateRelease.tag_name}</span>\n          </p>\n        )}\n        {validationMessage && (\n          <p className=\"warning\">\n            <span>{validationMessage}</span>\n          </p>\n        )}\n        {queryError && (\n          <p className=\"error\">\n            <span>{queryError}</span>\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}